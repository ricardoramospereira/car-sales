# Generated by Django 4.1.3 on 2022-11-22 13:13

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Car",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("car_title", models.CharField(max_length=255, verbose_name="Carro")),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("AC", "Acre"),
                            ("AL", "Alagoas"),
                            ("AP", "Amapá"),
                            ("AM", "Amazonas"),
                            ("BA", "Bahia"),
                            ("CE", "Ceará"),
                            ("ES", "Espírito Santo"),
                            ("GO", "Goiás"),
                            ("MA", "Maranhão"),
                            ("MT", "Mato Grosso"),
                            ("MS", "Mato Grosso do Sul"),
                            ("MG", "Minas Gerais"),
                            ("PA", "Pará"),
                            ("PB", "Paraíba"),
                            ("PR", "Paraná"),
                            ("PE", "Pernambuco"),
                            ("PI", "Piauí"),
                            ("RJ", "Rio de Janeiro"),
                            ("RN", "Rio Grande do Norte"),
                            ("RS", "Rio Grande do Sul"),
                            ("RO", "Rondônia"),
                            ("RR", "Roraima"),
                            ("SP", "São Paulo"),
                            ("SE", "Sergipe"),
                            ("TO", "Tocantins"),
                            ("DF", "Distrito Federal"),
                        ],
                        max_length=100,
                        verbose_name="Estado",
                    ),
                ),
                ("city", models.CharField(max_length=100, verbose_name="Cidade")),
                ("color", models.CharField(max_length=100, verbose_name="Cor")),
                ("model", models.CharField(max_length=100, verbose_name="Modelo")),
                (
                    "year",
                    models.IntegerField(
                        choices=[
                            (2000, 2000),
                            (2001, 2001),
                            (2002, 2002),
                            (2003, 2003),
                            (2004, 2004),
                            (2005, 2005),
                            (2006, 2006),
                            (2007, 2007),
                            (2008, 2008),
                            (2009, 2009),
                            (2010, 2010),
                            (2011, 2011),
                            (2012, 2012),
                            (2013, 2013),
                            (2014, 2014),
                            (2015, 2015),
                            (2016, 2016),
                            (2017, 2017),
                            (2018, 2018),
                            (2019, 2019),
                            (2020, 2020),
                            (2021, 2021),
                            (2022, 2022),
                        ],
                        verbose_name="Ano",
                    ),
                ),
                (
                    "condition",
                    models.CharField(max_length=100, verbose_name="Condição"),
                ),
                ("price", models.ImageField(upload_to="", verbose_name="Preço")),
                ("description", models.TextField(verbose_name="Descrição")),
                (
                    "car_photo",
                    models.ImageField(upload_to="photos/%d/%m/%Y", verbose_name="foto"),
                ),
                (
                    "car_photo_1",
                    models.ImageField(
                        blank=True, upload_to="photos/%d/%m/%Y", verbose_name="foto"
                    ),
                ),
                (
                    "car_photo_2",
                    models.ImageField(
                        blank=True, upload_to="photos/%d/%m/%Y", verbose_name="foto"
                    ),
                ),
                (
                    "car_photo_3",
                    models.ImageField(
                        blank=True, upload_to="photos/%d/%m/%Y", verbose_name="foto"
                    ),
                ),
                (
                    "car_photo_4",
                    models.ImageField(
                        blank=True, upload_to="photos/%d/%m/%Y", verbose_name="foto"
                    ),
                ),
                (
                    "features",
                    models.CharField(
                        choices=[
                            ("Controle de Cruzeiro", "Controle de Cruzeiro"),
                            ("Interface de áudio", "Interface de áudio"),
                            ("Airbags", "Airbags"),
                            ("Ar Condicionado", "Ar Condicionado"),
                            ("Aquecimento do Assento", "Aquecimento do Assento"),
                            ("Sistema de Alarme", "Sistema de Alarme"),
                            (
                                "Assistente de estacionamento",
                                "Assistente de estacionamento",
                            ),
                            ("Direção Hidráulica", "Direção Hidráulica"),
                            ("Câmera de Ré", "Câmera de Ré"),
                            (
                                "Injeção Direta de Combustível",
                                "Injeção Direta de Combustível",
                            ),
                            ("Partida/Parada Automática", "Partida/Parada Automática"),
                            ("Defletor de vento", "Defletor de vento"),
                            ("Fone Bluetooth", "Fone Bluetooth"),
                        ],
                        max_length=100,
                        verbose_name="Recursos",
                    ),
                ),
                ("body_style", models.CharField(max_length=100, verbose_name="Estilo")),
                ("engine", models.CharField(max_length=100, verbose_name="Motor")),
                (
                    "transmition",
                    models.CharField(max_length=100, verbose_name="Transmissão"),
                ),
                ("interior", models.CharField(max_length=100, verbose_name="Interior")),
                ("miles", models.IntegerField(verbose_name="KM")),
                (
                    "doors",
                    models.IntegerField(
                        choices=[
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                        ],
                        verbose_name="Portas",
                    ),
                ),
                ("passengers", models.IntegerField(verbose_name="Passageiros")),
                ("vin_no", models.CharField(max_length=100)),
                ("milage", models.IntegerField(verbose_name="KMs")),
                (
                    "fuel_type",
                    models.CharField(max_length=50, verbose_name="Tipo de combustível"),
                ),
                (
                    "no_of_owners",
                    models.CharField(max_length=100, verbose_name="Nº Proprietários"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Destaques"),
                ),
                (
                    "created_date",
                    models.DateField(
                        blank=True,
                        default=datetime.datetime.now,
                        verbose_name="Data de Criação",
                    ),
                ),
            ],
        ),
    ]
